{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\OneDrive\\\\Escritorio\\\\TFG_ALEXGASCON\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useContext(AuthContext);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Puedes mostrar un spinner o algo mientras se carga el estado de autenticación\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this); // Redirige a login si el usuario no está autenticado\n  }\n  if (requiredRole && user.role !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // Redirige si el usuario no tiene el rol necesario\n  }\n  return children; // Si el usuario está autenticado y tiene el rol requerido, renderiza el componente\n};\n_s(ProtectedRoute, \"nVcmz/Z77NEMBy/UMVDV0Kci2eI=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","role","_c","$RefreshReg$"],"sources":["C:/Users/Misha/OneDrive/Escritorio/TFG_ALEXGASCON/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const { user, loading } = useContext(AuthContext);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;  // Puedes mostrar un spinner o algo mientras se carga el estado de autenticación\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" />;  // Redirige a login si el usuario no está autenticado\r\n  }\r\n\r\n  if (requiredRole && user.role !== requiredRole) {\r\n    return <Navigate to=\"/dashboard\" />;  // Redirige si el usuario no tiene el rol necesario\r\n  }\r\n\r\n  return children;  // Si el usuario está autenticado y tiene el rol requerido, renderiza el componente\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAEjD,IAAIQ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACjC;EAEA,IAAI,CAACL,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAE;EACpC;EAEA,IAAIP,YAAY,IAAIE,IAAI,CAACO,IAAI,KAAKT,YAAY,EAAE;IAC9C,oBAAOH,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAE;EACxC;EAEA,OAAOR,QAAQ,CAAC,CAAE;AACpB,CAAC;AAACE,EAAA,CAhBIH,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}