{"ast":null,"code":"// src/services/authService.js\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebaseConfig\";\nexport const registerUser = async (email, password, rol = \"usuario\") => {\n  try {\n    // Crear usuario en Firebase Authentication\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Guardar usuario en Firestore\n    await setDoc(doc(db, \"usuarios\", user.uid), {\n      rol,\n      email\n    });\n    return user; // Devuelve el usuario si todo es exitoso\n  } catch (error) {\n    // Capturar errores y devolver un mensaje adecuado\n    console.error(\"Error al registrar usuario: \", error);\n    throw new Error(\"Error al registrar usuario. Verifica tus datos.\");\n  }\n};\nexport const loginUser = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","setDoc","doc","auth","db","registerUser","email","password","rol","userCredential","user","uid","error","console","Error","loginUser"],"sources":["C:/Users/Misha/OneDrive/Escritorio/TFG_ALEXGASCON/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebaseConfig\";\r\n\r\nexport const registerUser = async (email, password, rol = \"usuario\") => {\r\n  try {\r\n    // Crear usuario en Firebase Authentication\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n\r\n    // Guardar usuario en Firestore\r\n    await setDoc(doc(db, \"usuarios\", user.uid), { rol, email });\r\n\r\n    return user; // Devuelve el usuario si todo es exitoso\r\n  } catch (error) {\r\n    // Capturar errores y devolver un mensaje adecuado\r\n    console.error(\"Error al registrar usuario: \", error);\r\n    throw new Error(\"Error al registrar usuario. Verifica tus datos.\");\r\n  }\r\n};\r\n\r\nexport const loginUser = (email, password) => {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n};"],"mappings":"AAAA;AACA,SAASA,8BAA8B,EAAEC,0BAA0B,QAAQ,eAAe;AAC1F,SAASC,MAAM,EAAEC,GAAG,QAAQ,oBAAoB;AAChD,SAASC,IAAI,EAAEC,EAAE,QAAQ,mBAAmB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,GAAG,SAAS,KAAK;EACtE,IAAI;IACF;IACA,MAAMC,cAAc,GAAG,MAAMV,8BAA8B,CAACI,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IAClF,MAAMG,IAAI,GAAGD,cAAc,CAACC,IAAI;;IAEhC;IACA,MAAMT,MAAM,CAACC,GAAG,CAACE,EAAE,EAAE,UAAU,EAAEM,IAAI,CAACC,GAAG,CAAC,EAAE;MAAEH,GAAG;MAAEF;IAAM,CAAC,CAAC;IAE3D,OAAOI,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACpE;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOP,0BAA0B,CAACG,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}